"""
Django settings for crm project.
Generated by 'django-admin startproject' using Django 4.0.3.

"""

from pathlib import Path
from os import path

# django-environ
# https://django-environ.readthedocs.io/en/latest/
import environ

BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env()
env.read_env(path.join(BASE_DIR, '.env'))

SECRET_KEY = env('SECRET_KEY')

DEBUG = env.bool('DEBUG', False)

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    # 'django.contrib.sites',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
    'rest_framework',
    'corsheaders',
    'ckeditor',
    'ckeditor_uploader',
    'api',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # corsheaders
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.cache.FetchFromCacheMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

if DEBUG:
    INSTALLED_APPS.extend(['debug_toolbar'])
    MIDDLEWARE.extend(['debug_toolbar.middleware.DebugToolbarMiddleware'])

API_PAGES_RENDER_HOOK = env('API_BUILD_HOOK')

EMAIL_CONFIG = env.email_url('EMAIL_URL')
EMAIL_RECIPIENTS = env('EMAIL_RECIPIENTS', list, [])
EMAIL_HOST_USER = EMAIL_CONFIG['EMAIL_HOST_USER']
DEFAULT_FROM_EMAIL = EMAIL_CONFIG['EMAIL_HOST_USER']
vars().update(EMAIL_CONFIG)

ADMINS = [('Starck', EMAIL_RECIPIENTS)]

ALLOWED_HOSTS = env('ALLOWED_HOSTS', list, ['*'])
TRUSTED_URL = env('TRUSTED_URL', default=None)
INTERNAL_IPS = ALLOWED_HOSTS

if TRUSTED_URL:
    CSRF_TRUSTED_ORIGINS = [TRUSTED_URL]
    CORS_ALLOWED_ORIGINS = [TRUSTED_URL]

CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_METHODS = ['GET', 'POST', 'OPTIONS']
CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "content-type",
    "origin",
    "x-csrftoken",
    "x-requested-with",
]

CORS_URLS_REGEX = r'^/api/.*$'

ROOT_URLCONF = 'crm.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'crm.wsgi.application'

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        # 'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
        'rest_framework.permissions.AllowAny',
    ]
}

DATABASES = {
    'default': env.db()
}

# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.dummy.DummyCache',
#     },
#     #'default': env.cache()
# }

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

FILE_UPLOAD_HANDLERS = [
    # "forum.logic.ImageUploadHandler",
    "django.core.files.uploadhandler.MemoryFileUploadHandler",
    "django.core.files.uploadhandler.TemporaryFileUploadHandler"
]

FILE_UPLOAD_MAX_MEMORY_SIZE = 5 * 1024 * 1024
MAX_UPLOAD_FILES_SIZE = FILE_UPLOAD_MAX_MEMORY_SIZE
FILE_UPLOAD_PERMISSIONS = 0o775
# FILE_UPLOAD_TEMP_DIR = '/home/starck/tmp'

ADMIN_THUMBNAIL_QUALITY = 75
ADMIN_THUMBNAIL_SIZE = [50, 50]

PORTFOLIO_IMAGE_QUALITY = 80
PORTFOLIO_IMAGE_SIZE = [1400, 900]

CKEDITOR_UPLOAD_PATH = 'uploads/'
CKEDITOR_IMAGE_BACKEND = 'pillow'
AWS_QUERYSTRING_AUTH = False
AWS_S3_SIGNATURE_VERSION = 's3v4'
AWS_S3_FILE_OVERWRITE = True

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': [
            {'name': 'styles', 'items': ['Styles', 'Format', 'Font', 'FontSize']},
            {'name': 'basicstyles',
             'items': ['Bold', 'Italic', 'Underline', 'Strike', 'Superscript', '-', 'RemoveFormat']},
            {'name': 'colors', 'items': ['TextColor', 'BGColor']},
            {'name': 'paragraph',
             'items': ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', '-',
                       'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', ]},
            {'name': 'tools',
             'items': ['Image', 'Video', 'Link', 'Youtube', 'Maximize', 'ShowBlocks', 'Undo', 'Redo', ]},
        ],
        'font_names': 'Roboto;Cuprum;Alegreya Sans;Corbel;Calibri;Arial;Tahoma;Sans serif;Helvetica;Symbol',
        'width': '70%',
        'height': '400',
        'tabSpaces': 4,
        'config.extraPlugins': 'youtube',
        'extraAllowedContent': 'iframe[*]',
        'toolbarCanCollapse': True,
    },
}

LANGUAGE_CODE = 'ru-RU'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_L10N = True

USE_TZ = True

PUBLIC_ROOT = env('PUBLIC_ROOT', default='')

STATIC_URL = '/static/'

# Base url to serve media files
MEDIA_URL = '/media/'

STATIC_ROOT = path.join(BASE_DIR, PUBLIC_ROOT + 'static/')

MEDIA_ROOT = path.join(BASE_DIR, PUBLIC_ROOT + 'media/')

FILES_UPLOAD_FOLDER = 'uploads/'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
